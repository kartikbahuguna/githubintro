[
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-09-26T17:23:52.383Z",
        "line": 13,
        "name": "Add Employee record",
        "description": "",
        "id": "test-crud-methods-in-sample-employee-rest-api-testing;add-employee-record;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 941133700,
              "status": "passed"
            },
            "line": 6,
            "name": "I set POST employee service api endpoint as https://reqres.in/",
            "match": {
              "arguments": [
                {
                  "val": "https://reqres.in/",
                  "offset": 44
                }
              ],
              "location": "StepDefinition.PostCompile.i_set_POST_employee_service_api_endpoint_as_uri(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2991900,
              "status": "passed"
            },
            "line": 7,
            "name": "I create a request and enter Kartik and Engineer",
            "match": {
              "arguments": [
                {
                  "val": "Kartik",
                  "offset": 29
                },
                {
                  "val": "Engineer",
                  "offset": 40
                }
              ],
              "location": "StepDefinition.PostCompile.i_create_a_request_and_enter_name_and_job(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2538543500,
              "status": "passed"
            },
            "line": 8,
            "name": "I pass the request and /api/users",
            "match": {
              "arguments": [
                {
                  "val": "/api/users",
                  "offset": 23
                }
              ],
              "location": "StepDefinition.PostCompile.i_pass_the_request_and_endpointUri(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 124236300,
              "status": "passed"
            },
            "line": 9,
            "name": "I check the reponse by 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 23
                }
              ],
              "location": "StepDefinition.PostCompile.i_check_the_reponse_by_statuscode(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@smoke"
          },
          {
            "name": "@smokeOne"
          }
        ]
      },
      {
        "start_timestamp": "2021-09-26T17:23:56.137Z",
        "line": 24,
        "name": "UPDATE Employee record",
        "description": "",
        "id": "test-crud-methods-in-sample-employee-rest-api-testing;update-employee-record;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 190400,
              "status": "passed"
            },
            "line": 17,
            "name": "I set PUT employee service api endpoint as https://reqres.in/",
            "match": {
              "arguments": [
                {
                  "val": "https://reqres.in/",
                  "offset": 43
                }
              ],
              "location": "StepDefinition.PutCompile.i_set_PUT_employee_service_api_endpoint_as_baseUri(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 998300,
              "status": "passed"
            },
            "line": 18,
            "name": "I create a put request and enter updated Somesh and Software Engineer",
            "match": {
              "arguments": [
                {
                  "val": "Somesh",
                  "offset": 41
                },
                {
                  "val": "Software Engineer",
                  "offset": 52
                }
              ],
              "location": "StepDefinition.PutCompile.i_create_a_put_request_and_enter_updated_name_and_job(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 891906400,
              "status": "passed"
            },
            "line": 19,
            "name": "I pass the put request and /api/users/2",
            "match": {
              "arguments": [
                {
                  "val": "/api/users/2",
                  "offset": 27
                }
              ],
              "location": "StepDefinition.PutCompile.i_pass_the_put_request_and_endpointUri(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2784100,
              "status": "passed"
            },
            "line": 20,
            "name": "I check the put response by 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 28
                }
              ],
              "location": "StepDefinition.PutCompile.i_check_the_put_reponse_by_statuscode(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@smoke"
          },
          {
            "name": "@smokeTwo"
          }
        ]
      },
      {
        "start_timestamp": "2021-09-26T17:23:57.044Z",
        "line": 34,
        "name": "GET Employee record",
        "description": "",
        "id": "test-crud-methods-in-sample-employee-rest-api-testing;get-employee-record;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 997200,
              "status": "passed"
            },
            "line": 28,
            "name": "I set GET employee service api endpoints as https://reqres.in/",
            "match": {
              "arguments": [
                {
                  "val": "https://reqres.in/",
                  "offset": 44
                }
              ],
              "location": "StepDefinition.GetCompile.i_set_GET_employee_service_api_endpoint_as_baseUri(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 726875600,
              "status": "passed"
            },
            "line": 29,
            "name": "I create a get request and pass the /api/users/2",
            "match": {
              "arguments": [
                {
                  "val": "/api/users/2",
                  "offset": 36
                }
              ],
              "location": "StepDefinition.GetCompile.i_create_a_get_request_and_pass_the_endpointUri(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4206100,
              "status": "passed"
            },
            "line": 30,
            "name": "I check the get response by 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 28
                }
              ],
              "location": "StepDefinition.GetCompile.i_check_the_get_response_by_statuscode(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@smoke"
          },
          {
            "name": "@smokeFour"
          }
        ]
      },
      {
        "start_timestamp": "2021-09-26T17:23:57.790Z",
        "line": 44,
        "name": "DELETE Employee record",
        "description": "",
        "id": "test-crud-methods-in-sample-employee-rest-api-testing;delete-employee-record;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1154400,
              "status": "passed"
            },
            "line": 38,
            "name": "I set DELETE employee service api endpoint as https://reqres.in/",
            "match": {
              "arguments": [
                {
                  "val": "https://reqres.in/",
                  "offset": 46
                }
              ],
              "location": "StepDefinition.DeleteCompile.i_set_DELETE_employee_service_api_endpoint_as_baseUri(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 766994500,
              "status": "passed"
            },
            "line": 39,
            "name": "I create DELETE HTTP request and pass the /api/users/2",
            "match": {
              "arguments": [
                {
                  "val": "/api/users/2",
                  "offset": 42
                }
              ],
              "location": "StepDefinition.DeleteCompile.i_create_DELETE_put_request_and_pass_the_endpointUri(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1995100,
              "status": "passed"
            },
            "line": 40,
            "name": "I check the DELETE response by 204",
            "match": {
              "arguments": [
                {
                  "val": "204",
                  "offset": 31
                }
              ],
              "location": "StepDefinition.DeleteCompile.i_check_the_DELETE_reponse_by_statuscode(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@smoke"
          },
          {
            "name": "@smokeThree"
          }
        ]
      }
    ],
    "name": "Test CRUD methods in Sample Employee REST API testing",
    "description": "",
    "id": "test-crud-methods-in-sample-employee-rest-api-testing",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/CRUD.feature",
    "tags": [
      {
        "name": "@smoke",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]